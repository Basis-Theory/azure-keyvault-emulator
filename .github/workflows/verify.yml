name: Verify

on:
  push:
    branches: [master]
    paths-ignore:
      - "**/README.md"

jobs:
  request_approval:
    runs-on: ubuntu-latest
    steps:
      - name: Send Deploy Request
        uses: Basis-Theory/github-actions/deploy-slack-action@master
        with:
          slack-api-token: ${{ secrets.SLACK_DUCKBOT_API_KEY }}
          channel: ${{ vars.SLACK_DUCKBOT_PRODUCT_APPROVAL_CHANNEL }}
          mention-person: ${{ vars.SLACK_DUCKBOT_PRODUCT_APPROVER }}
          status: "request"

  verify:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x

      - name: Add hosts to /etc/hosts
        run: |
          echo "127.0.0.1 localhost.vault.azure.net" | sudo tee -a /etc/hosts

      - name: Verify
        run: make verify

  release:
    environment: PROD
    runs-on: ubuntu-latest
    needs:
      - verify
      - request_approval

    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_SEMANTIC_RELEASE_PAT }}

      - name: Start Deploy Message
        uses: Basis-Theory/github-actions/deploy-slack-action@master
        with:
          slack-api-token: ${{ secrets.SLACK_DUCKBOT_API_KEY }}
          channel: ${{ vars.SLACK_DUCKBOT_PRODUCT_DEPLOY_CHANNEL }}

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: "14"
          cache: "yarn"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN}}

      - name: Release
        id: release
        run: make release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_SEMANTIC_RELEASE_PAT }}

      - name: Publish docker image
        uses: docker/build-push-action@v2
        if: ${{ !(steps.release.outputs.version == null || steps.release.outputs.version == '') }}
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            basistheory/azure-keyvault-emulator:latest
            basistheory/azure-keyvault-emulator:${{ steps.release.outputs.version }}

      - name: Stop Deploy Message
        if: always()
        uses: Basis-Theory/github-actions/deploy-slack-action@master
        with:
          slack-api-token: ${{ secrets.SLACK_DUCKBOT_API_KEY }}
          channel: ${{ vars.SLACK_DUCKBOT_PRODUCT_DEPLOY_CHANNEL }}
          status: "done"
